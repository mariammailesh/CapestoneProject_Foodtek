// <auto-generated />
using System;
using CapestoneProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CapestoneProject.Migrations
{
    [DbContext(typeof(ESingleRestaurantManagementSystemContext))]
    [Migration("20250510233250_updated_db_migration")]
    partial class updated_db_migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CapestoneProject.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cart_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"));

                    b.Property<int?>("CartStatus")
                        .HasColumnType("int")
                        .HasColumnName("Cart_Status");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Created_By");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<decimal?>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("Total_Price");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_At");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Updated_By");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("CartId")
                        .HasName("PK__Cart__D6AB4759ACB7C396");

                    b.HasIndex("CartStatus");

                    b.HasIndex(new[] { "UserId" }, "UQ__Cart__206D91712162912E")
                        .IsUnique();

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("CapestoneProject.Models.CartItem", b =>
                {
                    b.Property<int>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cart_Item_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartItemId"));

                    b.Property<int>("CartId")
                        .HasColumnType("int")
                        .HasColumnName("Cart_Id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Created_By");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("Item_Id");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Updated_By");

                    b.HasKey("CartItemId")
                        .HasName("PK__Cart_Ite__3C0F265CB1ADE5CC");

                    b.HasIndex("CartId");

                    b.HasIndex("ItemId");

                    b.ToTable("Cart_Items", (string)null);
                });

            modelBuilder.Entity("CapestoneProject.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Category_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryNameAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Category_NameAr");

                    b.Property<string>("CategoryNameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Category_NameEn");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Created_By");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Updated_By");

                    b.HasKey("CategoryId")
                        .HasName("PK__Categori__6DB38D6ED9EC75C4");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("CapestoneProject.Models.Chat", b =>
                {
                    b.Property<int>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Chat_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChatId"));

                    b.Property<string>("ChatFilePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Chat_File_Path");

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("Client_Id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Creation_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DriverId")
                        .HasColumnType("int")
                        .HasColumnName("Driver_Id");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_Id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Updated_By");

                    b.HasKey("ChatId")
                        .HasName("PK__Chats__9783B1DEE62FC6A8");

                    b.HasIndex("ClientId");

                    b.HasIndex("DriverId");

                    b.HasIndex("OrderId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("CapestoneProject.Models.DeliveryLocation", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Location_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("Client_Id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Creation_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DeliveryStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Delivery_Status");

                    b.Property<DateTime>("DeliveryTime")
                        .HasColumnType("datetime")
                        .HasColumnName("Delivery_Time");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_Id");

                    b.Property<string>("Region")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Updated_By");

                    b.HasKey("LocationId")
                        .HasName("PK__Delivery__D2BA00E202595D36");

                    b.HasIndex("ClientId");

                    b.HasIndex("OrderId")
                        .IsUnique()
                        .HasFilter("[Order_Id] IS NOT NULL");

                    b.ToTable("DeliveryLocations");
                });

            modelBuilder.Entity("CapestoneProject.Models.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Discount_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountId"));

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Created_By");

                    b.Property<string>("DescriptionAr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description_ar");

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description_en");

                    b.Property<int?>("DiscountStatus")
                        .HasColumnType("int")
                        .HasColumnName("Discount_Status");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("End_Date");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Active");

                    b.Property<decimal?>("LimitAmount")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Limit_Amount");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Start_Date");

                    b.Property<string>("TitleAr")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Title_ar");

                    b.Property<string>("TitleEn")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Title_en");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Updated_By");

                    b.HasKey("DiscountId")
                        .HasName("PK__Discount__6C1372049EC8737D");

                    b.HasIndex("DiscountStatus");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("CapestoneProject.Models.DiscountCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("Category_Id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Created_By");

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int")
                        .HasColumnName("Discount_Id");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Updated_By");

                    b.HasKey("Id")
                        .HasName("PK__Discount__3214EC07B0A34FF8");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DiscountId");

                    b.ToTable("Discount_Categories", (string)null);
                });

            modelBuilder.Entity("CapestoneProject.Models.DiscountItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Created_By");

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int")
                        .HasColumnName("Discount_Id");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("Item_Id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Updated_By");

                    b.HasKey("Id")
                        .HasName("PK__Discount__3214EC078D4298B4");

                    b.HasIndex("DiscountId");

                    b.HasIndex("ItemId");

                    b.ToTable("Discount_items", (string)null);
                });

            modelBuilder.Entity("CapestoneProject.Models.Favorite", b =>
                {
                    b.Property<int>("FavouriteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FavouriteId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavouriteId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("Item_Id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("FavouriteId")
                        .HasName("PK__Favourites__ID");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("CapestoneProject.Models.IssuesSuggestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Created_By");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<int?>("IssueType")
                        .HasColumnType("int")
                        .HasColumnName("Issue_Type");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Updated_By");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("Id")
                        .HasName("PK__Issues_S__3214EC076EB9F474");

                    b.HasIndex("IssueType");

                    b.HasIndex("UserId");

                    b.ToTable("Issues_Suggestions", (string)null);
                });

            modelBuilder.Entity("CapestoneProject.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Item_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("Category_Id");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Creation_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DescriptionAr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description_Ar");

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description_En");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name_Ar");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name_En");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("SoldCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Updated_By");

                    b.Property<int>("ViewCount")
                        .HasColumnType("int");

                    b.HasKey("ItemId")
                        .HasName("PK__Items__3FB50874D4819B4C");

                    b.HasIndex("CategoryId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("CapestoneProject.Models.ItemOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Creation_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("Item_Id");

                    b.Property<int>("OptionId")
                        .HasColumnType("int")
                        .HasColumnName("Option_Id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Updated_By");

                    b.HasKey("Id")
                        .HasName("PK__ItemOpti__3214EC0715D65DFB");

                    b.HasIndex("ItemId");

                    b.HasIndex("OptionId");

                    b.ToTable("ItemOptions");
                });

            modelBuilder.Entity("CapestoneProject.Models.LookupItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Creation_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("Type_Id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Updated_By");

                    b.Property<string>("ValueAr")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Value_Ar");

                    b.Property<string>("ValueEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Value_En");

                    b.HasKey("Id")
                        .HasName("PK__Lookup_I__3214EC0713576D9A");

                    b.HasIndex("TypeId");

                    b.ToTable("Lookup_Items", (string)null);
                });

            modelBuilder.Entity("CapestoneProject.Models.LookupType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TYPE_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeId"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Creation_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<string>("NameAr")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name_Ar");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name_En");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Updated_By");

                    b.HasKey("TypeId")
                        .HasName("PK__Lookup_T__41F99A32A2710A8C");

                    b.ToTable("Lookup_Types", (string)null);
                });

            modelBuilder.Entity("CapestoneProject.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Created_By");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<bool?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("Is_Read");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NotificationType")
                        .HasColumnType("int")
                        .HasColumnName("Notification_Type");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Updated_By");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("Id")
                        .HasName("PK__Notifica__3214EC07F500F7C2");

                    b.HasIndex("NotificationType");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("CapestoneProject.Models.Option", b =>
                {
                    b.Property<int>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Option_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OptionId"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Creation_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<bool?>("IsRequired")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("Is_Required");

                    b.Property<string>("NameAr")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name_Ar");

                    b.Property<string>("NameEn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name_En");

                    b.Property<string>("OptionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Updated_By");

                    b.HasKey("OptionId")
                        .HasName("PK__Options__3260907E7BD27D43");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("CapestoneProject.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Order_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("Client_Id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Created_By");

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int")
                        .HasColumnName("Discount_Id");

                    b.Property<int?>("DriverId")
                        .HasColumnType("int")
                        .HasColumnName("Driver_Id");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<int?>("OrderStatus")
                        .HasColumnType("int")
                        .HasColumnName("Order_Status");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Total_Price");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_At");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Updated_By");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__F1E4607B19E05042");

                    b.HasIndex("ClientId");

                    b.HasIndex("DiscountId");

                    b.HasIndex("DriverId");

                    b.HasIndex("OrderStatus");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CapestoneProject.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderItem_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Created_By");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("Item_Id");

                    b.Property<decimal?>("ItemPrice")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Item_Price");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_Id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Total_Price");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Updated_By");

                    b.HasKey("OrderItemId")
                        .HasName("PK__Order_It__2F30220238919D6B");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("Order_Items", (string)null);
                });

            modelBuilder.Entity("CapestoneProject.Models.OrdersHistory", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_Id");

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("Client_Id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Created_By");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Updated_By");

                    b.HasKey("OrderId", "ClientId")
                        .HasName("PK_OrdersHistory");

                    b.HasIndex("ClientId");

                    b.ToTable("Orders_History", (string)null);
                });

            modelBuilder.Entity("CapestoneProject.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Payment_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("Client_Id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Created_By");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_Id");

                    b.Property<DateTime?>("PaidAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Paid_At");

                    b.Property<int?>("PaymentMethod")
                        .HasColumnType("int")
                        .HasColumnName("Payment_Method");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_At");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Updated_By");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payments__DA6C7FC12F15425C");

                    b.HasIndex("ClientId");

                    b.HasIndex("OrderId");

                    b.HasIndex("PaymentMethod");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("CapestoneProject.Models.Permission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Permission_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermissionId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Created_By");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Updated_By");

                    b.HasKey("PermissionId")
                        .HasName("PK__Permissi__89B74485C2324BA6");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("CapestoneProject.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("Client_Id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Created_By");

                    b.Property<int>("DriverId")
                        .HasColumnType("int")
                        .HasColumnName("Driver_Id");

                    b.Property<string>("Feedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<int>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("Item_Id");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_Id");

                    b.Property<double?>("RatingAmount")
                        .HasColumnType("float")
                        .HasColumnName("Rating_Amount");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Updated_By");

                    b.HasKey("Id")
                        .HasName("PK__Ratings__3214EC07574E2397");

                    b.HasIndex("ClientId");

                    b.HasIndex("DriverId");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("CapestoneProject.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Created_By");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("Item_Id");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_Id");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Updated_By");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("Id")
                        .HasName("PK__Reports__3214EC078EE098FD");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("CapestoneProject.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Role_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Created_By");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name_Ar");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Name_En");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Updated_By");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__D80AB4BB9468D958");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CapestoneProject.Models.RolePermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("Role_Id");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int")
                        .HasColumnName("Permission_Id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Created_By");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Updated_By");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("Role_Permissions", (string)null);
                });

            modelBuilder.Entity("CapestoneProject.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Birth_Date");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Created_By");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Full_Name");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool?>("IsVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("Password_Hash");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("Phone_Number");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Profile_Image");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("Role_Id");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Updated_By");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__206D917003FA2063");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "PhoneNumber" }, "UQ__Users__17A35CA49DB8C3C0")
                        .IsUnique();

                    b.HasIndex(new[] { "PasswordHash" }, "UQ__Users__31C827963597F0F0")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D105341D5365BB")
                        .IsUnique();

                    b.HasIndex(new[] { "UserName" }, "UQ__Users__C9F28456FF38F0BB")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CapestoneProject.Models.UserIssuesSuggestion", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.Property<int>("IssueSuggestionId")
                        .HasColumnType("int")
                        .HasColumnName("Issue_Suggestion_Id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Created_By");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Updated_By");

                    b.HasKey("UserId", "IssueSuggestionId");

                    b.HasIndex("IssueSuggestionId");

                    b.ToTable("User_Issues_Suggestions", (string)null);
                });

            modelBuilder.Entity("CapestoneProject.Models.UserNotification", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.Property<int>("NotificationId")
                        .HasColumnType("int")
                        .HasColumnName("Notification_Id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Created_By");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<bool?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("Is_Read");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Updated_By");

                    b.HasKey("UserId", "NotificationId");

                    b.HasIndex("NotificationId");

                    b.ToTable("User_Notifications", (string)null);
                });

            modelBuilder.Entity("CapestoneProject.Models.UserOtp", b =>
                {
                    b.Property<int>("UserOtpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserOTP_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserOtpId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Created_At")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Created_By");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ExpirationTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("Is_Active");

                    b.Property<bool?>("IsUsed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Otpcode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("OTPCode")
                        .IsFixedLength();

                    b.Property<string>("Purpose")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("ResetPassword");

                    b.Property<int?>("TryCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Update_Date");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Updated_By");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("UserOtpId")
                        .HasName("PK__UserOTP__44938591C6B1170F");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "Email" }, "UQ__UserOTP__A9D10534BCE8D409")
                        .IsUnique();

                    b.ToTable("UserOTP", (string)null);
                });

            modelBuilder.Entity("CapestoneProject.Models.Cart", b =>
                {
                    b.HasOne("CapestoneProject.Models.LookupItem", "CartStatusNavigation")
                        .WithMany("Carts")
                        .HasForeignKey("CartStatus")
                        .HasConstraintName("FK__Cart__Cart_Statu__671F4F74");

                    b.HasOne("CapestoneProject.Models.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("CapestoneProject.Models.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Cart__User_Id__662B2B3B");

                    b.Navigation("CartStatusNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CapestoneProject.Models.CartItem", b =>
                {
                    b.HasOne("CapestoneProject.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Cart_Item__Cart___6CD828CA");

                    b.HasOne("CapestoneProject.Models.Item", "Item")
                        .WithMany("CartItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Cart_Item__Item___6DCC4D03");

                    b.Navigation("Cart");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("CapestoneProject.Models.Chat", b =>
                {
                    b.HasOne("CapestoneProject.Models.User", "Client")
                        .WithMany("ChatClients")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__Chats__Client_Id__0F624AF8");

                    b.HasOne("CapestoneProject.Models.User", "Driver")
                        .WithMany("ChatDrivers")
                        .HasForeignKey("DriverId")
                        .IsRequired()
                        .HasConstraintName("FK__Chats__Driver_Id__10566F31");

                    b.HasOne("CapestoneProject.Models.Order", "Order")
                        .WithMany("Chats")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Chats__Order_Id__1332DBDC");

                    b.Navigation("Client");

                    b.Navigation("Driver");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("CapestoneProject.Models.DeliveryLocation", b =>
                {
                    b.HasOne("CapestoneProject.Models.User", "Client")
                        .WithMany("DeliveryLocations")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__DeliveryL__Clien__1CBC4616");

                    b.HasOne("CapestoneProject.Models.Order", "Order")
                        .WithOne("DeliveryLocations")
                        .HasForeignKey("CapestoneProject.Models.DeliveryLocation", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__DeliveryL__Order__1F98B2C1");

                    b.Navigation("Client");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("CapestoneProject.Models.Discount", b =>
                {
                    b.HasOne("CapestoneProject.Models.LookupItem", "DiscountStatusNavigation")
                        .WithMany("Discounts")
                        .HasForeignKey("DiscountStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Discounts__Disco__797309D9");

                    b.Navigation("DiscountStatusNavigation");
                });

            modelBuilder.Entity("CapestoneProject.Models.DiscountCategory", b =>
                {
                    b.HasOne("CapestoneProject.Models.Category", "Category")
                        .WithMany("DiscountCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Discount___Categ__3E1D39E1");

                    b.HasOne("CapestoneProject.Models.Discount", "Discount")
                        .WithMany("DiscountCategories")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Discount___Disco__3D2915A8");

                    b.Navigation("Category");

                    b.Navigation("Discount");
                });

            modelBuilder.Entity("CapestoneProject.Models.DiscountItem", b =>
                {
                    b.HasOne("CapestoneProject.Models.Discount", "Discount")
                        .WithMany("DiscountItems")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Discount___Disco__37703C52");

                    b.HasOne("CapestoneProject.Models.Item", "Item")
                        .WithMany("DiscountItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Discount___Item___3864608B");

                    b.Navigation("Discount");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("CapestoneProject.Models.Favorite", b =>
                {
                    b.HasOne("CapestoneProject.Models.Item", "Item")
                        .WithMany("Favorites")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Favourites_Items");

                    b.HasOne("CapestoneProject.Models.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Favourites_Users");

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CapestoneProject.Models.IssuesSuggestion", b =>
                {
                    b.HasOne("CapestoneProject.Models.LookupItem", "IssueTypeNavigation")
                        .WithMany("IssuesSuggestions")
                        .HasForeignKey("IssueType")
                        .HasConstraintName("FK__Issues_Su__Issue__32AB8735");

                    b.HasOne("CapestoneProject.Models.User", "User")
                        .WithMany("IssuesSuggestions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Issues_Su__User___31B762FC");

                    b.Navigation("IssueTypeNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CapestoneProject.Models.Item", b =>
                {
                    b.HasOne("CapestoneProject.Models.Category", "Category")
                        .WithMany("Items")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Items__Category___628FA481");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CapestoneProject.Models.ItemOption", b =>
                {
                    b.HasOne("CapestoneProject.Models.Item", "Item")
                        .WithMany("ItemOptions")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ItemOptio__Item___74AE54BC");

                    b.HasOne("CapestoneProject.Models.Option", "Option")
                        .WithMany("ItemOptions")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ItemOptio__Optio__75A278F5");

                    b.Navigation("Item");

                    b.Navigation("Option");
                });

            modelBuilder.Entity("CapestoneProject.Models.LookupItem", b =>
                {
                    b.HasOne("CapestoneProject.Models.LookupType", "Type")
                        .WithMany("LookupItems")
                        .HasForeignKey("TypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Lookup_It__Type___6B24EA82");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("CapestoneProject.Models.Notification", b =>
                {
                    b.HasOne("CapestoneProject.Models.LookupItem", "NotificationTypeNavigation")
                        .WithMany("Notifications")
                        .HasForeignKey("NotificationType")
                        .HasConstraintName("FK__Notificat__Notif__2CF2ADDF");

                    b.HasOne("CapestoneProject.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Notificat__User___2BFE89A6");

                    b.Navigation("NotificationTypeNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CapestoneProject.Models.Order", b =>
                {
                    b.HasOne("CapestoneProject.Models.User", "Client")
                        .WithMany("OrderClients")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__Orders__Client_I__7C4F7684");

                    b.HasOne("CapestoneProject.Models.Discount", "Discount")
                        .WithMany("Orders")
                        .HasForeignKey("DiscountId")
                        .HasConstraintName("FK__Orders__Discount__00200768");

                    b.HasOne("CapestoneProject.Models.User", "Driver")
                        .WithMany("OrderDrivers")
                        .HasForeignKey("DriverId")
                        .HasConstraintName("FK__Orders__Driver_I__7D439ABD");

                    b.HasOne("CapestoneProject.Models.LookupItem", "OrderStatusNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("OrderStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Orders__Order_St__01142BA1");

                    b.Navigation("Client");

                    b.Navigation("Discount");

                    b.Navigation("Driver");

                    b.Navigation("OrderStatusNavigation");
                });

            modelBuilder.Entity("CapestoneProject.Models.OrderItem", b =>
                {
                    b.HasOne("CapestoneProject.Models.Item", "Item")
                        .WithMany("OrderItems")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK__Order_Ite__Item___06CD04F7");

                    b.HasOne("CapestoneProject.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Order_Ite__Order__05D8E0BE");

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("CapestoneProject.Models.OrdersHistory", b =>
                {
                    b.HasOne("CapestoneProject.Models.User", "Client")
                        .WithMany("OrdersHistories")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__Orders_Hi__Clien__09A971A2");

                    b.HasOne("CapestoneProject.Models.Order", "Order")
                        .WithMany("OrdersHistories")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Orders_Hi__Order__0C85DE4D");

                    b.Navigation("Client");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("CapestoneProject.Models.Payment", b =>
                {
                    b.HasOne("CapestoneProject.Models.User", "Client")
                        .WithMany("Payments")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__Payments__Client__160F4887");

                    b.HasOne("CapestoneProject.Models.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Payments__Order___18EBB532");

                    b.HasOne("CapestoneProject.Models.LookupItem", "PaymentMethodNavigation")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentMethod")
                        .HasConstraintName("FK__Payments__Paymen__19DFD96B");

                    b.Navigation("Client");

                    b.Navigation("Order");

                    b.Navigation("PaymentMethodNavigation");
                });

            modelBuilder.Entity("CapestoneProject.Models.Rating", b =>
                {
                    b.HasOne("CapestoneProject.Models.User", "Client")
                        .WithMany("RatingClients")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__Ratings__Client___22751F6C");

                    b.HasOne("CapestoneProject.Models.User", "Driver")
                        .WithMany("RatingDrivers")
                        .HasForeignKey("DriverId")
                        .IsRequired()
                        .HasConstraintName("FK__Ratings__Driver___236943A5");

                    b.HasOne("CapestoneProject.Models.Item", "Item")
                        .WithMany("Ratings")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Ratings_Items");

                    b.HasOne("CapestoneProject.Models.Order", "Order")
                        .WithMany("Ratings")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Ratings__Order_I__2645B050");

                    b.Navigation("Client");

                    b.Navigation("Driver");

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("CapestoneProject.Models.Report", b =>
                {
                    b.HasOne("CapestoneProject.Models.Item", "Item")
                        .WithMany("Reports")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Reports__Item_Id__43D61337");

                    b.HasOne("CapestoneProject.Models.Order", "Order")
                        .WithMany("Reports")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Reports__Order_I__44CA3770");

                    b.HasOne("CapestoneProject.Models.User", "User")
                        .WithMany("Reports")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Reports__User_Id__42E1EEFE");

                    b.Navigation("Item");

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CapestoneProject.Models.RolePermission", b =>
                {
                    b.HasOne("CapestoneProject.Models.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Role_Perm__Permi__56E8E7AB");

                    b.HasOne("CapestoneProject.Models.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Role_Perm__Role___55F4C372");

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CapestoneProject.Models.User", b =>
                {
                    b.HasOne("CapestoneProject.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Users__Role_Id__5441852A");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CapestoneProject.Models.UserIssuesSuggestion", b =>
                {
                    b.HasOne("CapestoneProject.Models.IssuesSuggestion", "IssueSuggestion")
                        .WithMany("UserIssuesSuggestions")
                        .HasForeignKey("IssueSuggestionId")
                        .IsRequired()
                        .HasConstraintName("FK__User_Issu__Issue__51300E55");

                    b.HasOne("CapestoneProject.Models.User", "User")
                        .WithMany("UserIssuesSuggestions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__User_Issu__User___503BEA1C");

                    b.Navigation("IssueSuggestion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CapestoneProject.Models.UserNotification", b =>
                {
                    b.HasOne("CapestoneProject.Models.Notification", "Notification")
                        .WithMany("UserNotifications")
                        .HasForeignKey("NotificationId")
                        .IsRequired()
                        .HasConstraintName("FK__User_Noti__Notif__4B7734FF");

                    b.HasOne("CapestoneProject.Models.User", "User")
                        .WithMany("UserNotifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__User_Noti__User___4A8310C6");

                    b.Navigation("Notification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CapestoneProject.Models.UserOtp", b =>
                {
                    b.HasOne("CapestoneProject.Models.User", "User")
                        .WithMany("UserOtps")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserOTP__User_Id__5F7E2DAC");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CapestoneProject.Models.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("CapestoneProject.Models.Category", b =>
                {
                    b.Navigation("DiscountCategories");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("CapestoneProject.Models.Discount", b =>
                {
                    b.Navigation("DiscountCategories");

                    b.Navigation("DiscountItems");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("CapestoneProject.Models.IssuesSuggestion", b =>
                {
                    b.Navigation("UserIssuesSuggestions");
                });

            modelBuilder.Entity("CapestoneProject.Models.Item", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("DiscountItems");

                    b.Navigation("Favorites");

                    b.Navigation("ItemOptions");

                    b.Navigation("OrderItems");

                    b.Navigation("Ratings");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("CapestoneProject.Models.LookupItem", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Discounts");

                    b.Navigation("IssuesSuggestions");

                    b.Navigation("Notifications");

                    b.Navigation("Orders");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("CapestoneProject.Models.LookupType", b =>
                {
                    b.Navigation("LookupItems");
                });

            modelBuilder.Entity("CapestoneProject.Models.Notification", b =>
                {
                    b.Navigation("UserNotifications");
                });

            modelBuilder.Entity("CapestoneProject.Models.Option", b =>
                {
                    b.Navigation("ItemOptions");
                });

            modelBuilder.Entity("CapestoneProject.Models.Order", b =>
                {
                    b.Navigation("Chats");

                    b.Navigation("DeliveryLocations")
                        .IsRequired();

                    b.Navigation("OrderItems");

                    b.Navigation("OrdersHistories");

                    b.Navigation("Payments");

                    b.Navigation("Ratings");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("CapestoneProject.Models.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("CapestoneProject.Models.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CapestoneProject.Models.User", b =>
                {
                    b.Navigation("Cart");

                    b.Navigation("ChatClients");

                    b.Navigation("ChatDrivers");

                    b.Navigation("DeliveryLocations");

                    b.Navigation("Favorites");

                    b.Navigation("IssuesSuggestions");

                    b.Navigation("Notifications");

                    b.Navigation("OrderClients");

                    b.Navigation("OrderDrivers");

                    b.Navigation("OrdersHistories");

                    b.Navigation("Payments");

                    b.Navigation("RatingClients");

                    b.Navigation("RatingDrivers");

                    b.Navigation("Reports");

                    b.Navigation("UserIssuesSuggestions");

                    b.Navigation("UserNotifications");

                    b.Navigation("UserOtps");
                });
#pragma warning restore 612, 618
        }
    }
}
